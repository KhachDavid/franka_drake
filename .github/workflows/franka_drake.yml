name: franka_drake CI

on:
  push:
    paths:
      - 'franka_drake/**'
      - '.github/workflows/franka_drake.yml'
  pull_request:
    paths:
      - 'franka_drake/**'
      - '.github/workflows/franka_drake.yml'

jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            cmake g++ ninja-build curl lsb-release \
            libpoco-dev libeigen3-dev \
            libgtest-dev libfmt-dev libspdlog-dev
          # Build and install GTest (provides GTest::GTest / GTest::Main)
          if [ -d /usr/src/googletest ]; then SRC=/usr/src/googletest; else SRC=/usr/src/gtest; fi
          sudo cmake -S "$SRC" -B "$SRC/build"
          sudo cmake --build "$SRC/build" --target install -j"$(nproc)"

      - name: Install Drake (precompiled)
        run: |
          UBUNTU_CODENAME=$(lsb_release -cs)
          BASE_URL=https://drake-packages.csail.mit.edu/drake
          case "$UBUNTU_CODENAME" in
            jammy)  DRAKE_PKG=drake-latest-jammy.tar.gz ;;
            noble)  DRAKE_PKG=drake-latest-noble.tar.gz ;;
            *) echo "Unsupported Ubuntu codename: $UBUNTU_CODENAME"; exit 1 ;;
          esac
          curl -fsSL -o drake.tar.gz "$BASE_URL/nightly/$DRAKE_PKG"
          sudo mkdir -p /opt/drake
          sudo tar -xzf drake.tar.gz -C /opt/drake --strip-components=1

      - name: Build and install libfranka
        run: |
          git clone --depth 1 --branch 0.13.3 https://github.com/frankaemika/libfranka.git /tmp/libfranka
          cmake -S /tmp/libfranka -B /tmp/libfranka/build \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=/opt/libfranka \
            -DBUILD_TESTS=OFF -DBUILD_EXAMPLES=OFF -DBUILD_DOCUMENTATION=OFF
          cmake --build /tmp/libfranka/build -j"$(nproc)"
          sudo cmake --install /tmp/libfranka/build

      - name: Locate franka_drake directory
        run: |
          if [ -f CMakeLists.txt ] && grep -qi "^project(\s*franka_drake" CMakeLists.txt; then
            echo "FDIR=." >> $GITHUB_ENV
          elif [ -d franka_drake ]; then
            echo "FDIR=franka_drake" >> $GITHUB_ENV
          elif [ -d src/franka_drake ]; then
            echo "FDIR=src/franka_drake" >> $GITHUB_ENV
          else
            echo "franka_drake directory not found in repo root or under src/" >&2
            echo "Repository tree:" >&2
            ls -la
            exit 1
          fi

      - name: Configure
        env:
          LD_LIBRARY_PATH: /opt/drake/lib:/opt/libfranka/lib
        run: |
          cmake -S "$FDIR" -B "$FDIR/build" \
            -DCMAKE_PREFIX_PATH="/opt/drake;/opt/libfranka" \
            -DCMAKE_BUILD_TYPE=Release

      - name: Build
        env:
          LD_LIBRARY_PATH: /opt/drake/lib:/opt/libfranka/lib
        run: |
          cmake --build "$FDIR/build" -j"$(nproc)"

      - name: Test
        env:
          LD_LIBRARY_PATH: /opt/drake/lib:/opt/libfranka/lib
        run: |
          ctest --test-dir "$FDIR/build" --output-on-failure -j"$(nproc)"


