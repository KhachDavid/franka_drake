name: franka_drake CI

on:
  push:
    paths:
      - 'franka_drake/**'
      - '.github/workflows/franka_drake.yml'
  pull_request:
    paths:
      - 'franka_drake/**'
      - '.github/workflows/franka_drake.yml'

jobs:
  build-and-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            cmake g++ ninja-build curl lsb-release \
            libpoco-dev libeigen3-dev \
            libgtest-dev
          # Build and install GTest (provides GTest::GTest / GTest::Main)
          if [ -d /usr/src/googletest ]; then SRC=/usr/src/googletest; else SRC=/usr/src/gtest; fi
          sudo cmake -S "$SRC" -B "$SRC/build"
          sudo cmake --build "$SRC/build" --target install -j"$(nproc)"

      - name: Install Drake (precompiled)
        run: |
          UBUNTU_CODENAME=$(lsb_release -cs)
          BASE_URL=https://drake-packages.csail.mit.edu/drake
          case "$UBUNTU_CODENAME" in
            jammy)  DRAKE_PKG=drake-20250101-jammy.tar.gz ;;
            noble)  DRAKE_PKG=drake-20250101-noble.tar.gz ;;
            *) echo "Unsupported Ubuntu codename: $UBUNTU_CODENAME"; exit 1 ;;
          esac
          curl -fsSL -o drake.tar.gz "$BASE_URL/nightly/$DRAKE_PKG"
          sudo mkdir -p /opt/drake
          sudo tar -xzf drake.tar.gz -C /opt/drake --strip-components=1

      - name: Configure
        env:
          LD_LIBRARY_PATH: /opt/drake/lib
        run: |
          cmake -S src/franka_drake -B src/franka_drake/build \
            -DCMAKE_PREFIX_PATH=/opt/drake \
            -DCMAKE_BUILD_TYPE=Release

      - name: Build
        env:
          LD_LIBRARY_PATH: /opt/drake/lib
        run: |
          cmake --build src/franka_drake/build -j"$(nproc)"

      - name: Test
        env:
          LD_LIBRARY_PATH: /opt/drake/lib
        run: |
          ctest --test-dir src/franka_drake/build --output-on-failure -j"$(nproc)"


